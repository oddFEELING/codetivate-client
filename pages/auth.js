import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';
import Head from 'next/head';
import axios from 'axios';
import LogoImg from '../assets/icons/logo.svg';
import Script from 'next/script';
import { useSelector, useDispatch } from 'react-redux';
import { login } from '../features/user';
import Image from 'next/image';
import useScreen from '../hooks/useScreen';
import styles from '../styles/auth.module.scss';
import { loginScript, signupScript } from '../scripts/auth';

const Auth = () => {
  const dispatch = useDispatch();
  const screen = useScreen();
  const formRef = useRef();
  // user states
  const [Login, setLogin] = useState(true);
  const [fieldInfo, setFieldInfo] = useState({
    firstname: '',
    lastname: '',
    email: '',
    password: '',
  });

  useEffect(() => {
    console.log(`Mobile view? ${screen}`);
  }, [screen]);

  const logoStyle = {
    width: '60vw',
    height: '100vh',
    position: 'absolute',
    right: 0,
    bottom: 0,
  };

  //-->  value setter
  const setValue = (value) => (event) => {
    setFieldInfo({
      ...fieldInfo,
      [value]: event.target.value,
    });
  };

  //-->  effect tpo clear form
  useEffect(() => {
    formRef.current.reset();
  }, [Login]);

  //--------------------------------------->  handle auth

  const handleAuth = async (event) => {
    event.preventDefault();

    //   if its login
    if (Login) {
      try {
        const UserData = await loginScript(fieldInfo);
        dispatch(login(UserData.data));
      } catch (err) {
        throw err;
      }
    }
    //   if its sign up
    else {
      try {
        const UserData = await signupScript(fieldInfo);
        dispatch(login(UserData.data));
      } catch (err) {
        throw err;
      }
    }
  };

  //--------------------------------------->  effect to set submit
  useLayoutEffect(() => {
    formRef.current.addEventListener('submit', handleAuth);
    return () => {
      formRef.current.removeEventListener('submit', handleAuth);
    };
  }, [fieldInfo, Login]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Investing Journal</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Script src='https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js' />
      {!screen ? (
        <lottie-player
          src='https://assets4.lottiefiles.com/packages/lf20_xyadoh9h.json'
          background='transparent'
          speed='1.5'
          style={logoStyle}
          className={styles.auth__image}
          autoplay
          loop
        ></lottie-player>
      ) : (
        ''
      )}
      {/* ----- logo div ----- */}
      <div className='logo__container'>
        <Image src={LogoImg} alt='' />
      </div>

      {/* ----- form div ----- */}
      {Login ? (
        <form className={styles.form__div} ref={formRef}>
          <h1>Login</h1>
          {/* ----- email ----- */}
          <input
            type='email'
            required
            onChange={setValue('email')}
            placeholder='Enter email'
            className={styles.auth__input}
          />

          {/* ----- passord ----- */}
          <input
            type='password'
            required
            onChange={setValue('password')}
            placeholder='Enter password'
            className={styles.auth__input}
          />

          {/* ----- submit button ----- */}
          <button type='submit' className={styles.action__btn}>
            Login
          </button>
          <h3>
            Don&apos;t have an account?{' '}
            <b onClick={() => setLogin(false)}>Sign up</b>
          </h3>
        </form>
      ) : (
        <form className={styles.form__div} ref={formRef}>
          <h1>Join the party</h1>
          {/* ----- first name ----- */}
          <input
            type='text'
            required
            onChange={setValue('firstname')}
            placeholder='Enter firstname'
            className={styles.auth__input}
          />

          {/* ----- last name ----- */}
          <input
            type='text'
            required
            onChange={setValue('lastname')}
            placeholder='Enter lastname'
            className={styles.auth__input}
          />

          {/* ----- email ----- */}
          <input
            type='email'
            required
            onChange={setValue('email')}
            placeholder='Enter email'
            className={styles.auth__input}
          />

          {/* ----- passord ----- */}
          <input
            type='password'
            required
            min='6'
            onChange={setValue('password')}
            placeholder='Enter password'
            className={styles.auth__input}
          />

          {/* ----- submit butto n----- */}
          <button type='submit' className={styles.action__btn}>
            Sign up
          </button>

          <h3>
            Already have an account?
            <b onClick={() => setLogin(true)}>Login</b>
          </h3>
        </form>
      )}
    </div>
  );
};

export default Auth;
